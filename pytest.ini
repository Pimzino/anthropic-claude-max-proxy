[pytest]
# Pytest configuration for ccmaxproxy

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --ignore=venv
    --ignore=.venv
    --ignore=build
    --ignore=dist

# Asyncio configuration
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may use TestClient)
    smoke: Smoke tests (require real API tokens, opt-in only)
    slow: Slow tests (may take several seconds)
    
# Coverage exclusions
# Files/patterns to exclude from coverage
[coverage:run]
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*
    cli.py
    auth_cli.py
    stream_debug.py

[coverage:report]
# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    pass
